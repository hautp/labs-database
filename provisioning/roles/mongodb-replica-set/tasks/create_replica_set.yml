---
- name: Update MongoDB nodes into /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regex: '.*{{ item }}$'
    line: "{{ hostvars[item].ansible_host }} {{ item }}"
    state: present
  with_items: "{{ ansible_play_hosts }}"

- name: Copy mongod.conf to MongoDB nodes
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf

- name: Create folder to store keyfile
  file:
    path: /opt/mongo
    state: directory
    mode: '0755'

- name: Copy keyfile to MongoDB nodes
  copy:
    src: mongo-keyfile
    dest: /opt/mongo/mongo-keyfile
    owner: mongod
    group: root
    mode: "0400"

- name: Start and set onboot MongoDB service
  service:
    name: mongod
    state: restarted
    enabled: yes

- name: Create replica set initialization script
  template:
    src: replset_init.j2
    dest: /opt/mongo/replset_init.js

- name: Execute the initialization script
  shell: mongo /opt/mongo/replset_init.js
  when: inventory_hostname in groups['mongodb-primary']

- name: Enable authorize mode on MongoDB
  lineinfile:
    path: /etc/mongod.conf
    line: "  authorization: enabled"
    insertbefore: "keyFile"
    state: present

- name: Copy script create DB Admin and Cluster Admin user
  template:
    src: "{{ item.src }}"
    dest: "{{ mongo_opt }}/{{ item.dest }}"
  with_items:
    - { src: create_dbadmin.j2, dest: create_dbadmin.js }
    - { src: create_clusteradmin.j2, dest: create_clusteradmin.js }

- name: Waiting for MongoDB service
  pause:
    seconds: 10

- name: Execute the script to create users
  shell: "{{ item }}"
  with_items:
    - "mongo admin {{ mongo_opt }}/create_dbadmin.js"
    - "mongo admin -u {{ dbadmin_user }} -p {{ dbadmin_passwd }} {{ mongo_opt }}/create_clusteradmin.js"
  when: inventory_hostname in groups['mongodb-primary']
